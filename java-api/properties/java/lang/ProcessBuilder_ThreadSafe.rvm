package mop;

import java.io.*;
import java.lang.*;
import java.util.*;
import javamoprt.MOPLogging;
import javamoprt.MOPLogging.Level;
ProcessBuilder_ThreadSafe(ProcessBuilder p) {

	Thread owner = null;
	event safe_oper(ProcessBuilder p, Thread t){
		if ( ! (this.owner == null || this.owner == t) ) {
			return false;
		}
		{
			this.owner = t;
		}
	}
	event unsafe_oper(ProcessBuilder p, Thread t){
		if ( ! (this.owner != null && this.owner != t) ) {
			return false;
		}
		{
		}
	}
	ere: safe_oper*
	@fail
	{
		MOPLogging.out.println(Level.CRITICAL, __DEFAULT_MESSAGE);
		MOPLogging.out.println(Level.CRITICAL, "More than two threads attempted to use a ProcessBuilder instance, which may lead to a race condition");
		__RESET;
	}
}
