package mop;

import java.io.*;
import java.lang.*;
import javamoprt.MOPLogging;
import javamoprt.MOPLogging.Level;
Long_BadParsingArgs() {
	event bad_arg(String s, int radix){
		if (s == null || s.length() == 0) {
			MOPLogging.out.println(Level.CRITICAL, __DEFAULT_MESSAGE);
			MOPLogging.out.println(Level.CRITICAL, "Wrong argument to Long.parseLong(String s, int radix)");
		} else if (radix < java.lang.Character.MIN_RADIX || radix > java.lang.Character.MAX_RADIX) {
			MOPLogging.out.println(Level.CRITICAL, __DEFAULT_MESSAGE);
			MOPLogging.out.println(Level.CRITICAL, "Wrong argument to Long.parseLong(String s, int radix)");
		} else {
			for (int j = 0; j < s.length(); j++) {
				if (Character.digit(s.charAt(j), radix) == -1) {
					if (j == 0 && s.length() > 1 && s.charAt(0) == '-') {
					} else if (j == s.length() - 1 && (s.charAt(j) == 'l' || s.charAt(j) == 'L')) {
					} else {
						MOPLogging.out.println(Level.CRITICAL, __DEFAULT_MESSAGE);
						MOPLogging.out.println(Level.CRITICAL, "Wrong argument to Long.parseLong(String s, int radix)");
					}
				}
			}
		}
	}
	event bad_arg2(String s){
		if (s == null || s.length() == 0) {
			MOPLogging.out.println(Level.CRITICAL, __DEFAULT_MESSAGE);
			MOPLogging.out.println(Level.CRITICAL, "Wrong argument to Long.parseLong(String s)");
		} else {
			for (int j = 0; j < s.length(); j++) {
				if (Character.digit(s.charAt(j), 10) == -1) {
					if (j == 0 && s.length() > 1 && s.charAt(0) == '-') {
					} else if (j == s.length() - 1 && (s.charAt(j) == 'l' || s.charAt(j) == 'L')) {
					} else {
						MOPLogging.out.println(Level.CRITICAL, __DEFAULT_MESSAGE);
						MOPLogging.out.println(Level.CRITICAL, "Wrong argument to Long.parseLong(String s)");
					}
				}
			}
		}
	}
}
