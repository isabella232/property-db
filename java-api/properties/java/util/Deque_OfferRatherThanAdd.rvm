package mop;

import java.util.*;
import java.util.concurrent.*;
import javamoprt.MOPLogging;
import javamoprt.MOPLogging.Level;
Deque_OfferRatherThanAdd(Deque q) {
	creation event create(Deque q){
	}
	event add(Deque q){
	}
	ere: create add+
	@match
	{
		MOPLogging.out.println(Level.CRITICAL, __DEFAULT_MESSAGE);
		MOPLogging.out.println(Level.CRITICAL, "When using a capacity-restricted deque, it is generally preferable to use offerFirst(), offerLast() and offer() instead of addFirt(), addLast() and add().");
	}
}
