package mop;

import java.util.*;
import javamoprt.MOPLogging;
import javamoprt.MOPLogging.Level;
Collections_SortBeforeBinarySearch(List list) {

	Comparator comp = null;
	event sort1(List list){
	}
	event sort2(List list, Comparator comp2){
		this.comp = comp2;
	}
	event modify(List list){
	}
	event bsearch1(List list){
	}
	event bsearch2(List list, Comparator comp2){
		if ( ! (this.comp == comp2) ) {
			return false;
		}
		{
		}
	}
	event bad_bsearch2(List list, Comparator comp2){
		if ( ! (this.comp != comp2) ) {
			return false;
		}
		{
		}
	}
	fsm: unsorted [
	sort1 -> sorted1
	sort2 -> sorted2
	modify -> unsorted
	]
	sorted1 [
	sort1 -> sorted1
	sort2 -> sorted2
	modify -> unsorted
	bsearch1 -> sorted1
	]
	sorted2 [
	sort1 -> sorted1
	sort2 -> sorted2
	modify -> unsorted
	bsearch2 -> sorted2
	]
	@fail
	{
		MOPLogging.out.println(Level.CRITICAL, __DEFAULT_MESSAGE);
		MOPLogging.out.println(Level.CRITICAL, "The list must be sorted prior to making binarySearch() call.");
	}
}
