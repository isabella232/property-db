package mop;

import java.io.*;
import java.lang.*;
import javamoprt.MOPLogging;
import javamoprt.MOPLogging.Level;
Byte_BadDecodeArg() {
	event decode(Byte b, String nm){
		if (nm == null || nm.length() == 0) {
			MOPLogging.out.println(Level.CRITICAL, __DEFAULT_MESSAGE);
			MOPLogging.out.println(Level.CRITICAL, "Wrong argument to Byte.decode(String nm)");
		} else {
			for (int j = 0; j < nm.length(); j++) {
				if (Character.isWhitespace(nm.charAt(j))) {
					MOPLogging.out.println(Level.CRITICAL, __DEFAULT_MESSAGE);
					MOPLogging.out.println(Level.CRITICAL, "Wrong argument to Byte.decode(String nm)");
				}
			}
			String sub;
			if (nm.charAt(0) == '-') {
				sub = nm.substring(1);
			} else {
				sub = nm;
			}
			int radix = 0;
			if (sub.startsWith("0x") || sub.startsWith("0X")) {
				sub = sub.substring(2);
				radix = 16;
			} else if (sub.startsWith("#")) {
				sub = sub.substring(1);
				radix = 16;
			} else if (sub.startsWith("0")) {
				sub = sub.substring(1);
				radix = 8;
			} else {
				radix = 10;
			}
			try {
				if (Byte.parseByte(sub, radix) < 0) {
					MOPLogging.out.println(Level.CRITICAL, __DEFAULT_MESSAGE);
					MOPLogging.out.println(Level.CRITICAL, "Wrong argument to Byte.decode(String nm)");
				}
			} catch (Exception e) {
				MOPLogging.out.println(Level.CRITICAL, __DEFAULT_MESSAGE);
				MOPLogging.out.println(Level.CRITICAL, "Wrong argument to Byte.decode(String nm)");
			}
		}
	}
}
