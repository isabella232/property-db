package mop;

import android.webkit.*;
import java.lang.*;
import javamoprt.MOPLogging;
import javamoprt.MOPLogging.Level;


/**
 * {@link WebView#destroy} destroys the internal state of this WebView.
 * No other methods may be called on this WebView after destroy.
 * ( http://developer.android.com/reference/android/webkit/WebView.html#destroy() )
 *
 * @severity error
 */

WebView_destroy(WebView view) {

	creation event destroy after() :
		execution(* WebView+.destroy()) && this(view) { }

	creation event use before() :
		call(* WebView+.*(..)) && target(view) { }

	ere : close use+

	@match {
		MOPLogging.out.println(Level.CRITICAL, __DEFAULT_MESSAGE);
		MOPLogging.out.println(Level.CRITICAL, "A method is about to be called on a destroyed WebView.");
	}
}


