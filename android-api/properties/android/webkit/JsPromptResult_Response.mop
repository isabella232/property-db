package mop;

import android.webkit.*;
import java.lang.*;
import javamoprt.MOPLogging;
import javamoprt.MOPLogging.Level;


/**
 * The client can call cancel() to cancel the dialog or
 * confirm() with the user's input to confirm the dialog.
 *
 * @severity warning
 */

JsPromptResult_Response(JsPromptResult jpr) {

	creation event jsPromptStart before() :
		execution(boolean WebChromeClient+.onJsPrompt(.., JsPromptResult jpr)) { }

	creation event jsPromptEnd after() :
		execution(boolean WebChromeClient+.onJsPrompt(.., JsPromptResult jpr))(* WebViewClient+.onReceivedHttpAuthRequest(*,JsPromptResult jpr, ..)) { }

	event confirm before() :
		execution(* JsPromptResult+.confirm()) && this(jpr) && cflow(call(boolean WebChromeClient+.onJsPrompt(.., JsPromptResult jpr))) { }

	event cancel before() :
		execution(* JsPromptResult+.cancel()) && this(jpr) && cflow(call(boolean WebChromeClient+.onJsPrompt(.., JsPromptResult jpr))) { }

	ere : jsPromptStart (confirm | cancel) jsPromptEnd

	@fail {
		MOPLogging.out.println(Level.CRITICAL, __DEFAULT_MESSAGE);
		MOPLogging.out.println(Level.CRITICAL, "JsPromptResult contract violated");
	}
}


